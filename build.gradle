buildscript {
    repositories {
        //noinspection GrDeprecatedAPIUsage, JCenterRepository
        jcenter()
        mavenCentral()
    }

    dependencies {
        //noinspection DifferentKotlinGradleVersion
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'application'
}

group 'backend'
version '0.0.1-SNAPSHOT'

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    //noinspection GrDeprecatedAPIUsage, JCenterRepository
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // ktor
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-tomcat:$ktor_version"
    implementation "io.ktor:ktor-serialization:$ktor_version"
    // exposed
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    // JDBC Connection Pool
    implementation "com.zaxxer:HikariCP:$hikari_version"
    // JDBC Connector for PostgreSQL
    implementation "org.postgresql:postgresql:$postgresql_version"
    // DI for Ktor
    implementation "org.kodein.di:kodein-di-framework-ktor-server-jvm:$kodein_version"
    // log
    implementation "ch.qos.logback:logback-classic:$logback_version"
    // tests
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

application {
    getMainClass().set('backend.ApplicationKt')
}